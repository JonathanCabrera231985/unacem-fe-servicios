//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Interfaz.csService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="csServiceSoap", Namespace="http://cimait.org/")]
    public partial class csService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConsultaAutSRIOperationCompleted;
        
        private System.Threading.SendOrPostCallback recibeDocsOperationCompleted;
        
        private System.Threading.SendOrPostCallback recibeDocsStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultaAutSRIStringOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public csService() {
            this.Url = global::Interfaz.Properties.Settings.Default.Interfaz_csService_csService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConsultaAutSRICompletedEventHandler ConsultaAutSRICompleted;
        
        /// <remarks/>
        public event recibeDocsCompletedEventHandler recibeDocsCompleted;
        
        /// <remarks/>
        public event recibeDocsStringCompletedEventHandler recibeDocsStringCompleted;
        
        /// <remarks/>
        public event ConsultaAutSRIStringCompletedEventHandler ConsultaAutSRIStringCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cimait.org/ConsultaAutSRI", RequestNamespace="http://cimait.org/", ResponseNamespace="http://cimait.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ConsultaAutSRI(System.Data.DataTable p_tabla) {
            object[] results = this.Invoke("ConsultaAutSRI", new object[] {
                        p_tabla});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaAutSRIAsync(System.Data.DataTable p_tabla) {
            this.ConsultaAutSRIAsync(p_tabla, null);
        }
        
        /// <remarks/>
        public void ConsultaAutSRIAsync(System.Data.DataTable p_tabla, object userState) {
            if ((this.ConsultaAutSRIOperationCompleted == null)) {
                this.ConsultaAutSRIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaAutSRIOperationCompleted);
            }
            this.InvokeAsync("ConsultaAutSRI", new object[] {
                        p_tabla}, this.ConsultaAutSRIOperationCompleted, userState);
        }
        
        private void OnConsultaAutSRIOperationCompleted(object arg) {
            if ((this.ConsultaAutSRICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaAutSRICompleted(this, new ConsultaAutSRICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cimait.org/recibeDocs", RequestNamespace="http://cimait.org/", ResponseNamespace="http://cimait.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool recibeDocs(System.Data.DataTable p_data, string p_sucursal, out string p_mensaje) {
            object[] results = this.Invoke("recibeDocs", new object[] {
                        p_data,
                        p_sucursal});
            p_mensaje = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void recibeDocsAsync(System.Data.DataTable p_data, string p_sucursal) {
            this.recibeDocsAsync(p_data, p_sucursal, null);
        }
        
        /// <remarks/>
        public void recibeDocsAsync(System.Data.DataTable p_data, string p_sucursal, object userState) {
            if ((this.recibeDocsOperationCompleted == null)) {
                this.recibeDocsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecibeDocsOperationCompleted);
            }
            this.InvokeAsync("recibeDocs", new object[] {
                        p_data,
                        p_sucursal}, this.recibeDocsOperationCompleted, userState);
        }
        
        private void OnrecibeDocsOperationCompleted(object arg) {
            if ((this.recibeDocsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recibeDocsCompleted(this, new recibeDocsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cimait.org/recibeDocsString", RequestNamespace="http://cimait.org/", ResponseNamespace="http://cimait.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool recibeDocsString(string p_doc, string p_nombre, string p_sucursal, out string p_mensaje) {
            object[] results = this.Invoke("recibeDocsString", new object[] {
                        p_doc,
                        p_nombre,
                        p_sucursal});
            p_mensaje = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void recibeDocsStringAsync(string p_doc, string p_nombre, string p_sucursal) {
            this.recibeDocsStringAsync(p_doc, p_nombre, p_sucursal, null);
        }
        
        /// <remarks/>
        public void recibeDocsStringAsync(string p_doc, string p_nombre, string p_sucursal, object userState) {
            if ((this.recibeDocsStringOperationCompleted == null)) {
                this.recibeDocsStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrecibeDocsStringOperationCompleted);
            }
            this.InvokeAsync("recibeDocsString", new object[] {
                        p_doc,
                        p_nombre,
                        p_sucursal}, this.recibeDocsStringOperationCompleted, userState);
        }
        
        private void OnrecibeDocsStringOperationCompleted(object arg) {
            if ((this.recibeDocsStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.recibeDocsStringCompleted(this, new recibeDocsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cimait.org/ConsultaAutSRIString", RequestNamespace="http://cimait.org/", ResponseNamespace="http://cimait.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConsultaAutSRIString(string p_codDoc, string p_numDoc, out string p_autorizacion, out string p_fechaAut, out string p_xml, out string p_mensaje) {
            object[] results = this.Invoke("ConsultaAutSRIString", new object[] {
                        p_codDoc,
                        p_numDoc});
            p_autorizacion = ((string)(results[1]));
            p_fechaAut = ((string)(results[2]));
            p_xml = ((string)(results[3]));
            p_mensaje = ((string)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaAutSRIStringAsync(string p_codDoc, string p_numDoc) {
            this.ConsultaAutSRIStringAsync(p_codDoc, p_numDoc, null);
        }
        
        /// <remarks/>
        public void ConsultaAutSRIStringAsync(string p_codDoc, string p_numDoc, object userState) {
            if ((this.ConsultaAutSRIStringOperationCompleted == null)) {
                this.ConsultaAutSRIStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaAutSRIStringOperationCompleted);
            }
            this.InvokeAsync("ConsultaAutSRIString", new object[] {
                        p_codDoc,
                        p_numDoc}, this.ConsultaAutSRIStringOperationCompleted, userState);
        }
        
        private void OnConsultaAutSRIStringOperationCompleted(object arg) {
            if ((this.ConsultaAutSRIStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaAutSRIStringCompleted(this, new ConsultaAutSRIStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ConsultaAutSRICompletedEventHandler(object sender, ConsultaAutSRICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaAutSRICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaAutSRICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void recibeDocsCompletedEventHandler(object sender, recibeDocsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class recibeDocsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal recibeDocsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string p_mensaje {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void recibeDocsStringCompletedEventHandler(object sender, recibeDocsStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class recibeDocsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal recibeDocsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string p_mensaje {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ConsultaAutSRIStringCompletedEventHandler(object sender, ConsultaAutSRIStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaAutSRIStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaAutSRIStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string p_autorizacion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string p_fechaAut {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string p_xml {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string p_mensaje {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
}

#pragma warning restore 1591